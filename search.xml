<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Introduction to Kubernetes - Vietnamese</title>
    <url>/2020/06/26/kubernetes-overview/</url>
    <content><![CDATA[<p>Welcome to <a href="https://thanhbangoc.github.io/" target="_blank" rel="noopener">Thanh’s Blogs</a>! This is my post for Introduction to Kubernetes . Check document bellow for more info. If you get any problems when using document, you can find the answer in <a href="https://www.linkedin.com/in/thanhbangoc/" target="_blank" rel="noopener">Linkedin</a> or you can ask me on <a href="mailto:thanhbangoc@gmail.com">Email</a>.</p>
<h2 id="Tong-quan-ve-Kubernetes"><a href="#Tong-quan-ve-Kubernetes" class="headerlink" title="Tổng quan về Kubernetes"></a>Tổng quan về Kubernetes</h2><p>Kubernetes (còn gọi là k8s) là mã nguồn mở, một hệ thống để tự động triển khai hệ thống, quản lý, điều phối các ứng dụng được container hóa trên một cụm máy (1 hay nhiều) gọi là cluster. Nó thực sự là một hệ thống mạnh mẽ, được phát triển bởi Google. Với Kubernetes bạn có thể cấu hình để chạy các ứng dụng, dịch vụ sao cho phù hợp nhất khi chúng tương tác với nhau cũng như với bên ngoài. Bạn có thể điều chỉnh tăng giảm tài nguyên, bản chạy phục vụ cho dịch vụ (scale), bạn có thể cập nhật (update), thu hồi update khi có vấn đề … Kubernetes là một công cụ mạnh mẽ, mềm dẻo, dễ mở rộng khi so sánh nó với công cụ tương tự là Docker Swarm!</p>
<h2 id="So-luoc-kien-truc-cac-thanh-phan-cua-Kubernetes"><a href="#So-luoc-kien-truc-cac-thanh-phan-cua-Kubernetes" class="headerlink" title="Sơ lược kiến trúc - các thành phần của Kubernetes"></a>Sơ lược kiến trúc - các thành phần của Kubernetes</h2><p>Hệ thống Kubernetes thật sự phức tạp, các thành phần của sẽ được tìm hiểu dần qua từng bài viết, nhưng ở đây có một sơ đồ và một vài khái quát ban đầu về kiến trúc / thành phần của nó<br><img src="/post-images/kuber-overview/Screenshot_2.png" alt="alt"></p>
<p><strong>Master</strong> Server là máy chính của cluster, tại đây điều khiển cả cụm máy. <br><strong>etct</strong> là thành phần cơ bản cần thiết cho Kubernetes, nó lưu trữ các cấu hình chung cho cả cụm máy, etct chạy tại máy master. etct là một dự án nguồn mở nó cung cấp dịch vụ lưu dữ liệu theo cặp key/value.<br><strong>kube-apiserver</strong> chạy tại máy master, cung cấp các API Restful để các client (như kubectl) tương tác với Kubernetes.<br><strong>kube-scheduler</strong> chạy tại master, thành phần này giúp lựa chọn Node nào để chạy các ứng dụng căn cứ vào tài nguyên và các thành phần khác sao cho hệ thống ổn định.<br><strong>kube-controller</strong> chạy tại master, nó điều khiển trạng thái cluster, tương tác để thực hiện các tác vụ tạo, xóa, cập nhật … các tài nguyên.<br><strong>Kubelet</strong> dịch vụ vụ chạy trên tất cả các máy (Node), nó đảm đương giám sát chạy, dừng, duy trì các ứng dụng chạy trên node của nó.<br><strong>Kube-proxy</strong> cung cấp mạng proxy để các ứng dụng nhận được traffic từ ngoài mạng vào cluster.</p>
<h2 id="Cac-thong-tin-tom-tat-ve-Kubernetes"><a href="#Cac-thong-tin-tom-tat-ve-Kubernetes" class="headerlink" title="Các thông tin tóm tắt về Kubernetes"></a>Các thông tin tóm tắt về Kubernetes</h2><h3 id="Can-chuan-bi-gi-khi-tim-hieu-ve-Kubernetes"><a href="#Can-chuan-bi-gi-khi-tim-hieu-ve-Kubernetes" class="headerlink" title="Cần chuẩn bị gì khi tìm hiểu về Kubernetes?"></a>Cần chuẩn bị gì khi tìm hiểu về Kubernetes?</h3><ul>
<li>Cần vừa đọc khái niệm lý thuyết vừa thực hành.</li>
<li>Để tìm hiểu tốt về Kubernetes thì cần tìm hiểu về hệ sinh thái container và docker ở mức cở bản (có nghĩa là cài cắm và thực hành được với docker cơ bản).</li>
<li>Kỹ năng và kiến thức tối quan trọng khi làm việc với Kubernetes là: Linux.</li>
<li>Kỹ năng bổ trợ khác: Network (TCP/IP), một vài kỹ năng cài đặt các ứng dụng cơ bản như web server, database.</li>
<li>Tài liệu chuẩn của Kubernetes tất nhiên là ở trang chủ của họ <a href="https://kubernetes.io/" target="_blank" rel="noopener">https://kubernetes.io/</a>, ngoài ra github này cũng coi như là một tham khảo tốt.</li>
</ul>
<h3 id="Khi-nao-thi-can-dung-kubernetes"><a href="#Khi-nao-thi-can-dung-kubernetes" class="headerlink" title="Khi nào thì cần dùng kubernetes?"></a>Khi nào thì cần dùng kubernetes?</h3><ul>
<li>Thích hợp với các ứng dụng có nhu cầu scale khi có tải lớn (khi số lượng request tăng lên thì các container được quản lý bởi K8S sẽ tự động sinh ra hoặc khi 1 trong số các container bị down thì K8S tự động biết và bổ sung để thay thế.</li>
<li>Thích hợp với những ứng dụng có kiến trúc microservice hay cloud native app..</li>
<li>Các doanh nghiệp lớn, có nhu cầu thực sự phải scaling hệ thống nhanh chóng, và đã sử dụng container (Docker).</li>
<li>Các dự án cần chạy &gt;= 5 container CÙNG LOẠI cho 1 dịch vụ. (Ví dụ dùng &gt;=5 máy cùng để chạy code website XYZ). Còn nhỏ hơn thì tốt nhất không dùng - đừng mang dao mổ trâu đi giết gà.</li>
<li>Các startup hiện đại, chịu đầu tư vào công nghệ, để nhỡ về sau có to ra, thì to rất dễ 🙄.</li>
<li>Các sysadmin/DevOps muốn tăng lương, nhảy việc, vọc công nghệ mới.</li>
</ul>
<h3 id="Kubernetes-co-the-lam-nhung-gi"><a href="#Kubernetes-co-the-lam-nhung-gi" class="headerlink" title="Kubernetes có thể làm những gì?"></a>Kubernetes có thể làm những gì?</h3><p>Các container là một cách tốt để đóng gói và chạy các ứng dụng của bạn. Trong môi trường production, bạn cần quản lý các container chạy các ứng dụng và đảm bảo rằng không có khoảng thời gian downtime. Ví dụ, nếu một container bị tắt đi, một container khác cần phải khởi động lên. Điều này sẽ dễ dàng hơn nếu được xử lý bởi một hệ thống.</p>
<p>Đó là cách Kubernetes đến với chúng ta. Kubernetes cung cấp cho bạn một framework để chạy các hệ phân tán một cách mạnh mẽ. Nó đảm nhiệm việc nhân rộng và chuyển đổi dự phòng cho ứng dụng của bạn, cung cấp các mẫu deployment và hơn thế nữa. Ví dụ, Kubernetes có thể dễ dàng quản lý một triển khai canary cho hệ thống của bạn.</p>
<p>Kubernetes cung cấp:</p>
<ul>
<li><p><strong>Service discovery và cân bằng tải</strong><br>Kubernetes có thể expose một container sử dụng DNS hoặc địa chỉ IP của riêng nó. Nếu lượng traffic truy cập đến một container cao, Kubernetes có thể cân bằng tải và phân phối lưu lượng mạng (network traffic) để việc triển khai được ổn định.</p>
</li>
<li><p><strong>Điều phối bộ nhớ</strong><br>Kubernetes cho phép bạn tự động mount một hệ thống lưu trữ mà bạn chọn, như local storages, public cloud providers, v.v.</p>
</li>
<li><p><strong>Tự động rollouts và rollbacks</strong><br>Bạn có thể mô tả trạng thái mong muốn cho các container được triển khai dùng Kubernetes và nó có thể thay đổi trạng thái thực tế sang trạng thái mong muốn với tần suất được kiểm soát. Ví dụ, bạn có thể tự động hoá Kubernetes để tạo mới các container cho việc triển khai của bạn, xoá các container hiện có và áp dụng tất cả các resource của chúng vào container mới.</p>
</li>
<li><p><strong>Đóng gói tự động</strong><br>Bạn cung cấp cho Kubernetes một cluster gồm các node mà nó có thể sử dụng để chạy các tác vụ được đóng gói (containerized task). Bạn cho Kubernetes biết mỗi container cần bao nhiêu CPU và bộ nhớ (RAM). Kubernetes có thể điều phối các container đến các node để tận dụng tốt nhất các resource của bạn.</p>
</li>
<li><p><strong>Tự phục hồi</strong><br>Kubernetes khởi động lại các containers bị lỗi, thay thế các container, xoá các container không phản hồi lại cấu hình health check do người dùng xác định và không cho các client biết đến chúng cho đến khi chúng sẵn sàng hoạt động.</p>
</li>
<li><p><strong>Quản lý cấu hình và bảo mật</strong><br>Kubernetes cho phép bạn lưu trữ và quản lý các thông tin nhạy cảm như: password, OAuth token và SSH key. Bạn có thể triển khai và cập nhật lại secret và cấu hình ứng dụng mà không cần build lại các container image và không để lộ secret trong cấu hình stack của bạn.</p>
</li>
</ul>
<h3 id="Cac-san-pham-dua-tren-Kubernetes"><a href="#Cac-san-pham-dua-tren-Kubernetes" class="headerlink" title="Các sản phẩm dựa trên Kubernetes"></a>Các sản phẩm dựa trên Kubernetes</h3><ul>
<li><strong>RedHat Openshift 3</strong>: <a href="https://www.openshift.org/" target="_blank" rel="noopener">https://www.openshift.org/</a></li>
<li><strong>Deis Workflow</strong> - opensource platform as a service (PaaS): <a href="https://deis.com/paas/" target="_blank" rel="noopener">https://deis.com/paas/</a></li>
<li><strong>Rancher</strong> - container management platform: <a href="http://rancher.com/rancher/" target="_blank" rel="noopener">http://rancher.com/rancher/</a></li>
</ul>
<h3 id="Cac-cach-de-cai-dat-K8s"><a href="#Cac-cach-de-cai-dat-K8s" class="headerlink" title="Các cách để cài đặt K8s"></a>Các cách để cài đặt K8s</h3><ul>
<li><a href="https://kubernetes.io/docs/getting-started-guides/minikube/" target="_blank" rel="noopener"><strong>Minikube</strong></a> để cài 1 cluster test chơi chơi trên máy của bạn</li>
<li><a href="https://kubernetes.io/docs/getting-started-guides/kubeadm/" target="_blank" rel="noopener"><strong>Kubeadm</strong></a> đang trong giai đoạn phát triển, để cài trên hệ thống máy vật lý / máy ảo dùng Ubuntu 16.04 hay CentOS 7</li>
<li><a href="https://github.com/kubernetes-incubator/kargo/" target="_blank" rel="noopener"><strong>Kargo</strong></a> là phần mềm dựa trên Ansible để cài trên rất nhiều nơi bao gồm cả máy vật lý/máy ảo/AWS/GCE</li>
<li>Và rất nhiều các giải pháp khác nữa xem <a href="https://kubernetes.io/docs/getting-started-guides/" target="_blank" rel="noopener"><strong>tại đây</strong></a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Install Ubuntu Server 16.04 LTS</title>
    <url>/2020/06/25/in-ubun-ser-16.04/</url>
    <content><![CDATA[<p>Welcome to <a href="https://thanhbangoc.github.io/" target="_blank" rel="noopener">Thanh’s Blogs</a>! This is my post for Install Ubuntu Server 16.04 LTS . Check document bellow for more info. If you get any problems when using document, you can find the answer in <a href="https://www.linkedin.com/in/thanhbangoc/" target="_blank" rel="noopener">Linkedin</a> or you can ask me on <a href="mailto:thanhbangoc@gmail.com">Email</a>.</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>Ubuntu Server is Ubuntu tailored for networks and services, and it’s just as capable sharing files on your home network as it is running within a Hadoop cluster.</p>
<p>Unlike the installation of Ubuntu Desktop, Ubuntu Server does not include a graphical installation program. Instead, it uses a console menu-based process. If you’d rather install the desktop version, take a look at our Install Ubuntu desktop tutorial.</p>
<p>This guide will provide an overview of the installation from either a DVD or a USB flash drive, suitable for anyone with an interest in running their own server. For a more detailed guide on Ubuntu Server’s capabilities and its configuration, take a look at our Ubuntu Server help documentation.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h3><p>You can visit the following link to download the ISO file to install Ubuntu Server: <a href="https://www.ubuntu.com/download/server" target="_blank" rel="noopener">LTS</a> or <a href="https://releases.ubuntu.com/16.04/" target="_blank" rel="noopener">16.04</a> and choose download image you want !<br><img src="/post-images/install-ubuntu-server-16.04/Screenshot_1.png" alt="alt"><br>Once the image download completes, burn it to a CD or create a bootable USB disk using Unbootin (for BIOS machines) or Rufus (for UEFI machines).</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-install"><a href="#Run-install" class="headerlink" title="Run install"></a>Run install</h3><p>Place the bootable media intro the appropriate drive, start-up the machine and instruct the BIOS/UEFI by pressing a special function key (F2, F11, F12) to boot-up from the inserted USB/CD drive.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Create cluster Kubernetes with Vagrant Centos/7 - Vietnamese</title>
    <url>/2020/06/26/create-cluster-centos/</url>
    <content><![CDATA[<p>Welcome to <a href="https://thanhbangoc.github.io/" target="_blank" rel="noopener">Thanh’s Blogs</a>! This is my post for Create cluster Kubernetes with Vagrant Centos/7 . Check document bellow for more info. If you get any problems when using document, you can find the answer in <a href="https://www.linkedin.com/in/thanhbangoc/" target="_blank" rel="noopener">Linkedin</a> or you can ask me on <a href="mailto:thanhbangoc@gmail.com">Email</a>.</p>
<h2 id="Tong-quan"><a href="#Tong-quan" class="headerlink" title="Tổng quan"></a>Tổng quan</h2><p>Cluster có nghĩa là cụm, vậy Kubernetes Cluster có nghĩa là cụm các máy chạy docker có phải vậy không? không đơn giản thế đâu, nhưng trước tiên cứ hãy xem như vậy đã.<br>Một cluster là một tập các máy vật lý hay máy ảo được sử dụng bởi Kubernetes để chạy các ứng dụng.<br>Kubernetes Cluster bao gồm Nodes(master) và Nodes(worker).<br><img src="/post-images/cre-clu-centos7/Screenshot_1.png" alt="alt"></p>
<h2 id="Vagrant"><a href="#Vagrant" class="headerlink" title="Vagrant"></a>Vagrant</h2><p>Vagrant làm việc với một nền tảng ảo hóa nào đó như VirtualBox, HyperV, VM … nên bạn cũng cần có trên hệ thống của mình, ví dụ cần cài đặt VirtualBox nếu dùng nền tảng này, ở phần này coi như bạn đã đang có VirtualBox hay HyperV trên hệ thống.</p>
<h3 id="Cai-dat-vagrant"><a href="#Cai-dat-vagrant" class="headerlink" title="Cài đặt vagrant"></a>Cài đặt vagrant</h3><h4 id="tren-Windows-macOS"><a href="#tren-Windows-macOS" class="headerlink" title="trên Windows / macOS"></a>trên Windows / macOS</h4><p>Tải Vagrant đúng bản dành cho Windows (32 hay 64bit) hay macOS tại <a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">Tải Vagrant</a>, sau đó chạy bộ cài đặt, có thể cần khởi động lại máy.<br>Trên Windows có thể dùng PowerShell hoặc nếu muốn cài GitBash để có môi trường dòng lệnh tương tác với Vagrant. Sau đó chạy lệnh để kiểm tra vagarant đang có trên hệ thống:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant version</span><br></pre></td></tr></table></figure>

<h4 id="tren-Ubuntu"><a href="#tren-Ubuntu" class="headerlink" title="trên Ubuntu"></a>trên Ubuntu</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install vagrant</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant version</span><br></pre></td></tr></table></figure>

<h2 id="Tao-Cluster-Kubernetes-hoan-chinh"><a href="#Tao-Cluster-Kubernetes-hoan-chinh" class="headerlink" title="Tạo Cluster Kubernetes hoàn chỉnh"></a>Tạo Cluster Kubernetes hoàn chỉnh</h2><p>Phần này sẽ tạo ra một Cluster Kubernetes hoàn chỉnh từ 3 máy (3 VPS - hay 3 Server) chạy CentOS, bạn có thể dùng cách này khi triển khai môi trường product. Hệ thống này gồm:</p>
<table>
<thead>
<tr>
<th>Tên máy</th>
<th align="center">Thông tin</th>
<th align="right">Vai trò</th>
</tr>
</thead>
<tbody><tr>
<td>k8s-master.xtl</td>
<td align="center">HĐH CentOS7, Docker CE, Kubernetes. Địa chỉ IP 192.168.10.100</td>
<td align="right">Khởi tạo là master</td>
</tr>
<tr>
<td>k8s-worker1.xtl</td>
<td align="center">HĐH CentOS7, Docker CE, Kubernetes. Địa chỉ IP 192.168.10.101</td>
<td align="right">Khởi tạo là worker</td>
</tr>
<tr>
<td>k8s-worker1.xtl</td>
<td align="center">HĐH CentOS7, Docker CE, Kubernetes. Địa chỉ IP 192.168.10.102</td>
<td align="right">Khởi tạo là worker</td>
</tr>
</tbody></table>
<h3 id="Tao-node-Master-Kubernetes"><a href="#Tao-node-Master-Kubernetes" class="headerlink" title="Tạo node Master Kubernetes"></a>Tạo node Master Kubernetes</h3><p><strong>STEP1</strong>: Tạo file config chứa thông tin node master: kubernetes-centos7/master/Vagrantfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line">config.vm.box = <span class="string">"centos/7"</span></span><br><span class="line">config.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.10.100"</span></span><br><span class="line">config.vm.hostname = <span class="string">"k8s-master.xtl"</span></span><br><span class="line"></span><br><span class="line">config.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">    vb.name = <span class="string">"k8s-master.xtl"</span></span><br><span class="line">    vb.cpus = 2</span><br><span class="line">    vb.memory = <span class="string">"2048"</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">config.vm.provision <span class="string">"shell"</span>, path: <span class="string">"./../install-docker-kube.sh"</span></span><br><span class="line"></span><br><span class="line">config.vm.provision <span class="string">"shell"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"root password"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"123"</span> | passwd --stdin root</span><br><span class="line">    sed -i <span class="string">'s/^PasswordAuthentication no/PasswordAuthentication yes/'</span> /etc/ssh/sshd_config</span><br><span class="line">    systemctl reload sshd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt;&gt;/etc/hosts&lt;&lt;EOF</span><br><span class="line">192.168.10.100 k8s-master.xtl</span><br><span class="line">192.168.10.101 k8s-worker1.xtl</span><br><span class="line">192.168.10.102 k8s-worker2.xtl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">SHELL</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>Tương tự tạo cho các node worker1: kubernetes-centos7/woker1/Vagrantfile. Worker2 làm tương tự:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- mode: ruby -*-</span></span><br><span class="line"><span class="comment"># vi: set ft=ruby :</span></span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line">config.vm.box = <span class="string">"centos/7"</span></span><br><span class="line">config.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.10.101"</span></span><br><span class="line">config.vm.hostname = <span class="string">"k8s-worker1.xtl"</span></span><br><span class="line"></span><br><span class="line">config.vm.provider <span class="string">"virtualbox"</span> <span class="keyword">do</span> |vb|</span><br><span class="line">    vb.name = <span class="string">"k8s-worker1.xtl"</span></span><br><span class="line">    vb.cpus = 1</span><br><span class="line">    vb.memory = <span class="string">"1024"</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">config.vm.provision <span class="string">"shell"</span>, path: <span class="string">"./../install-docker-kube.sh"</span></span><br><span class="line"></span><br><span class="line">config.vm.provision <span class="string">"shell"</span>, inline: &lt;&lt;-SHELL</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"root password"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"123"</span> | passwd --stdin root</span><br><span class="line">    sed -i <span class="string">'s/^PasswordAuthentication no/PasswordAuthentication yes/'</span> /etc/ssh/sshd_config</span><br><span class="line">    systemctl reload sshd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt;&gt;/etc/hosts&lt;&lt;EOF</span><br><span class="line">192.168.10.100 k8s-master.xtl</span><br><span class="line">192.168.10.101 k8s-worker1.xtl</span><br><span class="line">192.168.10.102 k8s-worker2.xtl</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">SHELL</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>STEP2</strong>: Tạo file script install môi trường docker và kube cho những node này: kubernetes-centos7/install-docker-kube.sh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cập nhật 12/2019</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cai dat Docker</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum update -y &amp;&amp; yum install docker-ce-18.06.2.ce -y</span><br><span class="line">usermod -aG docker $(whoami)</span><br><span class="line"></span><br><span class="line"><span class="comment">## Create /etc/docker directory.</span></span><br><span class="line">mkdir /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setup daemon.</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"exec-opts"</span>: [<span class="string">"native.cgroupdriver=systemd"</span>],</span><br><span class="line">  <span class="string">"log-driver"</span>: <span class="string">"json-file"</span>,</span><br><span class="line">  <span class="string">"log-opts"</span>: &#123;</span><br><span class="line">    <span class="string">"max-size"</span>: <span class="string">"100m"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"storage-driver"</span>: <span class="string">"overlay2"</span>,</span><br><span class="line">  <span class="string">"storage-opts"</span>: [</span><br><span class="line">    <span class="string">"overlay2.override_kernel_check=true"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Restart Docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tat SELinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i --follow-symlinks <span class="string">'s/^SELINUX=enforcing/SELINUX=disabled/'</span> /etc/sysconfig/selinux</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tat Firewall</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># sysctl</span></span><br><span class="line">cat &gt;&gt;/etc/sysctl.d/kubernetes.conf&lt;&lt;EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tat swap</span></span><br><span class="line">sed -i <span class="string">'/swap/d'</span> /etc/fstab</span><br><span class="line">swapoff -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add yum repo file for Kubernetes</span></span><br><span class="line">cat &gt;&gt;/etc/yum.repos.d/kubernetes.repo&lt;&lt;EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">yum install -y -q kubeadm kubelet kubectl</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl start kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure NetworkManager before attempting to use Calico networking.</span></span><br><span class="line">cat &gt;&gt;/etc/NetworkManager/conf.d/calico.conf&lt;&lt;EOF</span><br><span class="line">[keyfile]</span><br><span class="line">unmanaged-devices=interface-name:cali*;interface-name:tunl*</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>Thiết lập phân quyền cho file script</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmode +x install-docker-kube.sh</span><br></pre></td></tr></table></figure>

<p><strong>STEP3</strong>: Khởi tạo các node.<br>Tại thư mục kubernetes-centos7/master/ gõ lệnh vagrant để tạo máy k8s-master.xtl.<br>Tại thư mục kubernetes-centos7/worker1/ gõ lệnh vagrant để tạo máy k8s-master.xtl.<br>Tại thư mục kubernetes-centos7/woker2/ gõ lệnh vagrant để tạo máy k8s-master.xtl.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vagrant up</span><br></pre></td></tr></table></figure>

<p><em>Sau lệnh này, quá trình cài đặt diễn ra, kết thúc thì có máy ảo VirtualBox với tên k8s-master.xtl, k8s-worker1 và k8s-worker2 trong đó đã có Docker, kubelet đang chạy lần lượt ở các địa chỉ IP 192.168.10.100, 192.168.10.101 và 192.168.10.102. Hãy ssh vào máy này bằng lệnh ssh với tài khoản root có cấu hình pass là 123 ở trên.</em></p>
<h3 id="Tao-cluster-o-node-master"><a href="#Tao-cluster-o-node-master" class="headerlink" title="Tạo cluster ở node master"></a>Tạo cluster ở node master</h3><p>Trong lệnh khởi tạo cluster có tham số –pod-network-cidr để chọn cấu hình mạng của POD, do dự định dùng Addon flanet nên chọn –pod-network-cidr=10.244.0.0/16.<br>ssh vào máy k8s-master.xtl</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh root@192.168.10.100</span><br></pre></td></tr></table></figure>
<p>Khởi tạo cluster</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm init --apiserver-advertise-address=172.16.10.100 --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure>
<p>Sau khi lệnh chạy xong, chạy tiếp cụm lệnh nó yêu cầu chạy sau khi khởi tạo- để chép file cấu hình đảm bảo trình kubectl trên máy này kết nối Cluster</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>
<p>Yêu cầu cài đặt một Plugin mạng trong các Plugin tại addon, ở đây đã chọn flanet, nên chạy lệnh sau để cài nó</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure>
<p>Gõ vài lệnh sau để kiểm tra</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Thông tin cluster</span></span><br><span class="line">kubectl cluster-info</span><br><span class="line"><span class="comment"># Các node trong cluster</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"><span class="comment"># Các pod đang chạy trong tất cả các namespace</span></span><br><span class="line">kubectl get pods -A</span><br></pre></td></tr></table></figure>

<h3 id="Cau-hinh-kubectl-may-host-truy-cap-den-cac-Cluster-tu-xa"><a href="#Cau-hinh-kubectl-may-host-truy-cap-den-cac-Cluster-tu-xa" class="headerlink" title="Cấu hình kubectl máy host truy cập đến các Cluster từ xa"></a>Cấu hình kubectl máy host truy cập đến các Cluster từ xa</h3><p>Trở lại máy Host, để xem nội dung cấu hình kubectl gõ lệnh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config view</span><br></pre></td></tr></table></figure>

<p>Khi thi hành kubectl, thì nó đọc file cấu hình ở đường dẫn $HOME/.kube/config để biết các thông số để kết nối đến Cluster. ($HOME là thư mục gốc dành cho user đang chạy, để biết chính xác gõ lệnh echo $HOME) - tài khoản root thì đó là /root/.kube/config</p>
<p>Tại máy master ở trên, có file cấu hình cho tại /root/.kube/config, ta copy file cấu hình này ra lưu thành file config-mycluster (<em>không ghi đè vào config hiện tại của máy HOST</em>)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp root@192.168.10.100:/etc/kubernetes/admin.conf ~/.kube/config-mycluster</span><br></pre></td></tr></table></figure>
<p>Giờ bạn sẽ thực hiện kết hợp 2 file: config và config-mycluster thành 1 và lưu trở lại config.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> KUBECONFIG=~/.kube/config:~/.kube/config-mycluster</span><br><span class="line">kubectl config view --flatten &gt; ~/.kube/config_temp</span><br><span class="line">mv ~/.kube/config_temp ~/.kube/config</span><br></pre></td></tr></table></figure>
<p>Thực hiện lệnh sau để get các contexts:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config get-contexts</span><br></pre></td></tr></table></figure>
<p><img src="/post-images/cre-clu-centos7/Screenshot_2.png" alt="alt"><br>Ký hiệu * là cho biết context hiện tại, nếu muốn chuyển làm việc sang context có tên kubernetes-admin@kubernetes (nối với cluster mới tạo ở trên) thì gõ lệnh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context kubernetes-admin@kubernetes</span><br></pre></td></tr></table></figure>

<h3 id="Ket-noi-Node-vao-Cluster"><a href="#Ket-noi-Node-vao-Cluster" class="headerlink" title="Kết nối Node vào Cluster"></a>Kết nối Node vào Cluster</h3><p>Hãy vào máy node master (bằng SSH ssh <a href="mailto:root@172.16.10.100">root@172.16.10.100</a>). Thực hiện lệnh sau với Cluster để lấy lệnh kết nối</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br></pre></td></tr></table></figure>
<p>Sau đó vào lần lượt các máy node worker1 và worker2 (bằng SSH ssh <a href="mailto:root@172.16.10.101">root@172.16.10.101</a> và ssh <a href="mailto:root@172.16.10.102">root@172.16.10.102</a>). Copy kết quả trả về từ lệnh trước và chạy trên terminal để kết nối.\</p>
<p>Sau đó kiểm tra các node đã được kết nối trong cluster bằng lệnh sau</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Cannot SSH into Server</title>
    <url>/2020/06/25/cannot-ssh-ser/</url>
    <content><![CDATA[<p>Welcome to <a href="https://thanhbangoc.github.io/" target="_blank" rel="noopener">Thanh’s Blogs</a>! This is my post for Cannot SSH into Server . Check document bellow for more info. If you get any problems when using document, you can find the answer in <a href="https://www.linkedin.com/in/thanhbangoc/" target="_blank" rel="noopener">Linkedin</a> or you can ask me on <a href="mailto:thanhbangoc@gmail.com">Email</a>.</p>
<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>Secure Shell (SSH) is a cryptographic network protocol used for a secure connection between a client and a server.</p>
<p>In this tutorial, we’ll show you how to enable SSH on an Ubuntu Desktop machine. Enabling SSH will allow you to remotely connect to your Ubuntu machine and securely transfer files or perform administrative tasks.</p>
<h2 id="Enabling-SSH-on-Ubuntu"><a href="#Enabling-SSH-on-Ubuntu" class="headerlink" title="Enabling SSH on Ubuntu"></a>Enabling SSH on Ubuntu</h2><h3 id="install-the-openssh-server-package"><a href="#install-the-openssh-server-package" class="headerlink" title="install the openssh-server package"></a>install the openssh-server package</h3><p>Open your terminal either by using the Ctrl+Alt+T keyboard shortcut or by clicking on the terminal icon and install the openssh-server package by typing.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure>
<p>Enter the password when prompted and enter <strong>Y</strong> to continue with the installation</p>
<p>To verify that the installation was successful and SSH service is running</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure>

<h3 id="Config-firewall-and-and-open-port-22"><a href="#Config-firewall-and-and-open-port-22" class="headerlink" title="Config firewall and and open port 22"></a>Config firewall and and open port 22</h3><p>If the firewall is enabled on your system, make sure to open the SSH port:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br><span class="line">sudo ufw <span class="built_in">enable</span></span><br><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>
<p>Now that SSH is installed and running on your Ubuntu system you can connect to it via SSH from any remote machine.</p>
<h3 id="Connecting-to-SSH-Over-LAN"><a href="#Connecting-to-SSH-Over-LAN" class="headerlink" title="Connecting to SSH Over LAN"></a>Connecting to SSH Over LAN</h3><p>To connect to your Ubuntu machine over LAN you only need to enter the following command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh username@ip_address</span><br></pre></td></tr></table></figure>
<p>If you don’t know your IP address you can easily find it using the ip command</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
